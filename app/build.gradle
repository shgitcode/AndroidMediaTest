apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.shgit.app"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // for : dalvik.system.PathClassLoader[DexPathList[[zip file "/data/app/com.shgit.app-2/base.apk"],nativeLibraryDirectories=[/vendor/lib64, /system/lib64]]]
            abiFilters  "armeabi-v7a"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main {
        // redirect to src/main/libs
        jniLibs.srcDirs = ['src/main/jniLibs','libs'] //'src/main/libs'
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // androidx:https://blog.csdn.net/sinyu890807/article/details/97142065
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation project(path: ':mediasdk')
}

// ndk compile
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn CopyToJniLibs
}
task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    String ndkDir = properties.getProperty('ndk.dir')
    commandLine "$ndkDir/ndk-build.cmd", "NDK_PROJECT_PATH=$projectDir.absolutePath\\build", "APP_BUILD_SCRIPT=$projectDir.absolutePath\\src\\main\\jni\\Android.mk", "NDK_APPLICATION_MK=$projectDir.absolutePath\\src\\main\\jni\\Application.mk"
}

task CopyToJniLibs(type: Copy, dependsOn: 'ndkBuild', description: 'copy the native libs to jniLibs') {
    from fileTree(dir: file(buildDir.absolutePath + '/libs'), include: '**/*.so')
    into file('src/main/jniLibs')
}
